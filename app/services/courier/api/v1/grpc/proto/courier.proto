syntax = "proto3";

package courier;


option go_package = "proto/courier.proto";

// The Accounting service definition.
service Courier {
  // Sends a greeting
  rpc insertNewCourier (NewCourierRequest) returns (CourierResponse) {}

  rpc getAllCourier (SearchParamCourier) returns (CourierListResponse){}

  rpc deleteCourier (CourierID) returns (CourierDeleteResponse){}

  rpc updateCourier (UpdateCourierRequest) returns (CourierResponse){}

  rpc updateCourierAvailable (UpdateCourierAvailableRequest) returns (CourierResponse){}

  rpc getCourier (CourierID) returns (CourierResponse){}

  rpc insertNewLocation (Location) returns (Location){}

  rpc updateLocation (Location) returns (Location){}

  rpc getLocation (userID) returns (Location){}

  rpc getLocationList (SearchParamLocation) returns (LocationList){}

}

// The request message containing the user's data.
message NewCourierRequest {
  string Username = 1;
  string Password = 2;
  string Firstname = 3;
  string Lastname = 4;
  string Email = 5;
  string Phone = 6;
}

// The request message containing the user's data.
message UpdateCourierRequest {
  int64  ID = 1;
  string Firstname = 2;
  string Lastname = 3;
  string Email = 4;
  string Phone = 5;
}

message UpdateCourierAvailableRequest {
  int64  ID = 1;
  string Available = 2;
}

// The response message containing the greetings
message CourierResponse {
  int64 ID = 1;
  string Username = 2;
  string Firstname = 3;
  string Lastname = 4;
  string Email = 5;
  string Phone = 6;
  bool Available = 7;
}

message CourierListResponse {
  repeated CourierResponse CourierListResponse = 1;
}

message SearchParamCourier {
  optional string available = 1;
}



message CourierID {
  int64 CourierID = 1;
}

message CourierDeleteResponse {
  string CourierDeleteResponse = 1;
}

message SearchParamLocation {
  optional string city = 1;
}

message Location {
  int64 UserID = 1;
  optional string Latitude = 2;
  optional string Longitude = 3;
  optional string Country = 4;
  optional string City = 5;
  optional string Region = 6;
  optional string Street = 7;
  optional string HomeNumber = 8;
  optional string Floor = 9;
  optional string Door = 10;
}

message LocationList {
  repeated Location LocationList = 1;
}

message userID {
  int64 userID = 1;
}
