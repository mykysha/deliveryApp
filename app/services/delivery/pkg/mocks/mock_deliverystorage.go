// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/service/deliveryservice/storage.go

// Package mock_deliveryservice is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/nndergunov/deliveryApp/app/services/delivery/pkg/domain"
)

// MockDeliveryStorage is a mock of DeliveryStorage interface.
type MockDeliveryStorage struct {
	ctrl     *gomock.Controller
	recorder *MockDeliveryStorageMockRecorder
}

// MockDeliveryStorageMockRecorder is the mock recorder for MockDeliveryStorage.
type MockDeliveryStorageMockRecorder struct {
	mock *MockDeliveryStorage
}

// NewMockDeliveryStorage creates a new mock instance.
func NewMockDeliveryStorage(ctrl *gomock.Controller) *MockDeliveryStorage {
	mock := &MockDeliveryStorage{ctrl: ctrl}
	mock.recorder = &MockDeliveryStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeliveryStorage) EXPECT() *MockDeliveryStorageMockRecorder {
	return m.recorder
}

// AssignOrder mocks base method.
func (m *MockDeliveryStorage) AssignOrder(order domain.AssignOrder) (*domain.AssignOrder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssignOrder", order)
	ret0, _ := ret[0].(*domain.AssignOrder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssignOrder indicates an expected call of AssignOrder.
func (mr *MockDeliveryStorageMockRecorder) AssignOrder(order interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssignOrder", reflect.TypeOf((*MockDeliveryStorage)(nil).AssignOrder), order)
}

// DeleteAssignedOrder mocks base method.
func (m *MockDeliveryStorage) DeleteAssignedOrder(orderID int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAssignedOrder", orderID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAssignedOrder indicates an expected call of DeleteAssignedOrder.
func (mr *MockDeliveryStorageMockRecorder) DeleteAssignedOrder(orderID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAssignedOrder", reflect.TypeOf((*MockDeliveryStorage)(nil).DeleteAssignedOrder), orderID)
}
